name: Top20 Automation

on:
  push:
  schedule:
    - cron: "0 6 * * 1"
  workflow_dispatch:

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Node Modules
        run: |
          npm install
      - name: Run Linter
        run: |
          npm run lint
      - name: Sec Test
        run: |
          npm audit --production
      - name: Unit Tests and Coverage
        run: |
          npm run coverage
      - name: Report Job Status
        if: ${{ failure() }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Top20 Frontend: build has failed!"}' "${WEBHOOK_URL}"
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Stage -- Build
        if: ${{ github.ref == 'refs/heads/develop' && github.event_name == 'push' }}
        run: |
          npm run build
        env:
          SKIP_PREFLIGHT_CHECK: "true"
          REACT_APP_BACKEND: ${{ secrets.STAGE_REACT_APP_BACKEND }}
          REACT_APP_UA_CODE: ${{ secrets.STAGE_REACT_APP_UA_CODE }}
      - name: Stage -- Automated Deploy
        if: ${{ github.ref == 'refs/heads/develop' && github.event_name == 'push' }}
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.STAGE_FIREBASE_PROJECT }}
      - name: Stage -- Report Success
        if: ${{ github.ref == 'refs/heads/develop' && github.event_name == 'push' }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Top20 Frontend: automated deploy of develop branch successful!"}' "${WEBHOOK_URL}"
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      - name: Stage -- Report Failure
        if: ${{ failure() }}
        run: |
          [[ ${REF} == 'refs/heads/develop' ]] && [[ ${EVENT} == 'push' ]] && curl -X POST -H 'Content-type: application/json' --data '{"text":"Top20 Frontend: automated deploy of develop branch failed!"}' "${WEBHOOK_URL}"
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          REF: ${{ github.ref }}
          EVENT: ${{ github.event_name }}

      - name: Production -- Detect A Release Tag
        if: contains(github.ref, '/tags/v') == true
        run: |
          GIT_DIFF=$(git diff origin/master)
          echo "GIT_DIFF=${GIT_DIFF}" >> $GITHUB_ENV
      - name: Production -- Ignore Non-Release Tags and Branches
        if: contains(github.ref, '/tags/v') != true
        run: |
          GIT_DIFF="not a release"
          echo "GIT_DIFF=${GIT_DIFF}" >> $GITHUB_ENV

      - name: Production -- Prepare Release Content
        if: env.GIT_DIFF == ''
        run: |
          NEWTAG=${GITHUB_REF#refs/tags/}
          echo "NEWTAG=${NEWTAG}" >> $GITHUB_ENV
      - name: Production -- Generate Changelog
        if: env.GIT_DIFF == ''
        uses: scottbrenner/generate-changelog-action@v1.3.3
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Production -- Create Release
        if: env.GIT_DIFF == ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEWTAG }}
          release_name: Release ${{ env.NEWTAG }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: true
          prerelease: false

      - name: Production -- Checkout Master Branch
        if: env.GIT_DIFF == ''
        run: |
          git checkout origin/master
      - name: Production -- Ensure Build Succeeds
        if: env.GIT_DIFF == ''
        run: |
          npm run build
        env:
          SKIP_PREFLIGHT_CHECK: "true"
          REACT_APP_BACKEND: ${{ secrets.PROD_REACT_APP_BACKEND }}
          REACT_APP_UA_CODE: ${{ secrets.PROD_REACT_APP_UA_CODE }}
      - name: Production -- Report Success
        if: env.GIT_DIFF == ''
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Top20 Frontend: automated release has been created for ${TAG}: https://github.com/playcounts/top20-frontend/releases\"}" "${WEBHOOK_URL}"
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          TAG: ${{ env.NEWTAG }}
      - name: Production -- Report Failure
        if: ${{ failure() }}
        run: |
          [[ -z ${GIT_DIFF} ]] && curl -X POST -H 'Content-type: application/json' --data '{"text":"Top20 Frontend: automated production release has failed!"}' "${WEBHOOK_URL}"
        env:
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          GIT_DIFF: ${{ env.GIT_DIFF }}
